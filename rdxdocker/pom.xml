<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>rdx-docker</artifactId>
    <name>React Django Prod</name>
    <packaging>war</packaging>

    <parent>
        <groupId>com.espan360.rdx</groupId>
        <artifactId>react-django-x</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <properties>
        <react.resource.directory>${project.build.directory}/${project.build.finalName}</react.resource.directory>
        <maven-dependency-plugin>3.1.1</maven-dependency-plugin>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    </properties>

    <dependencies>
        <!--
          Include the WAR-module as an overlay.
        -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>reactx</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>runtime</scope>
        </dependency>
        <!--
          Also include the compiled classes as a provided dependency so that the GWT compiler can pick up
          all the GWT modules.
        -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>reactx</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>production</id>
            <build>
                <plugins>
                    <!-- Unpack the theme and widgetset to (re)compile them for production mode -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin}</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>reactx</artifactId>
                                            <version>${project.version}</version>
                                            <type>war</type>
                                            <outputDirectory>${react.resource.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>yuicompressor-maven-plugin</artifactId>
                        <version>1.5.1</version>
                        <configuration>
                            <nosuffix>true</nosuffix>
                            <warSourceDirectory>${react.resource.directory}</warSourceDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compress</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-war</id>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <webResources>
                                <resource>
                                    <targetPath>../docker</targetPath>
                                    <directory>${basedir}/src/main/docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </webResources>
                            <overlays>
                                <overlay>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>reactx</artifactId>
                                </overlay>
                            </overlays>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>${maven-install-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-install</id>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!--
                      The Jetty plugin allows us to easily test the production build by running jetty:run on the command line.
                    -->
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jetty.plugin.version}</version>
                        <configuration>
                            <baseResource>${react.resource.directory}</baseResource>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.maven.plugin.version}</version>
                        <configuration>
                            <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                            <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.war</include>
                                </resource>
                            </resources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Do not produce and install artifacts when not using the production profile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-war</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <!-- TODO Remove when http://dev.vaadin.com/ticket/14924 is resolved -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.vaadin</groupId>
                                        <artifactId>vaadin-maven-plugin</artifactId>
                                        <versionRange>[7.1.11,)</versionRange>
                                        <goals>
                                            <goal>compile-theme</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.9,)</versionRange>
                                        <goals>
                                            <goal>unpack</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
